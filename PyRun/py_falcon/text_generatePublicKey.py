import ctypes
import os

# Get the full path of the current directory
current_directory = os.path.dirname(os.path.abspath(__file__))

# Load the DLL
dll_path = os.path.join(current_directory, "falcon_full_64.dll")
your_dll = ctypes.CDLL(dll_path)

# Define the argument and return types for the generatePublicKey function
your_dll.generatePublicKey.argtypes = [ctypes.c_char_p, ctypes.c_uint]
your_dll.generatePublicKey.restype = ctypes.c_char_p

def generate_public_key(private_key_str, logn):
    # Call the DLL function
    public_key_str = your_dll.generatePublicKey(private_key_str.encode(), logn)
    if public_key_str is None:
        print("Error: Public key generation failed.")
        return None

    return public_key_str.decode()

# Example usage
private_key_str = "5A0FC1B07FC2093641879E187E0E0F43F7C60E87BEEF4201902BF041E107BF1903E08CBEE0BC0F03E31805F0F0033781D004211077BFFC61F8C1916C7B09C1E078BA10B9AF67FF08FE3217BCFF4202037C1FC7FD845F414580007FEF4430904500F63F940108C3E173BBF08410741DF085D07821E8C991FF660087F0783D08BC030B42FFB20F8C200044102099F07620FBA1E0C1CD849ECDFDEE885A1838310864F0C1E103A2EFC00F10414040030423103C0F0004F7C1F177C1DECBDE780020001E03E208BBB0143C17C1F07FFFF03A1D8761C07E2E8821083C0F7C3E11B9E0FFC80047FFF8020FFC6188A11FC65113E14F0210FFE0E84240783C08442EF3FE08C81210201943A27C5E00802FFFE20FC60E7402FF443E87800FBE51880017802F0843D6C3E00021E681F0F3DF103BC0EC03FFFDA0941EF0B82187B917FE0F90DC3E48228BDDE93A3FFC22FF41BF885C10440EEBDC07C43083C13081E27C60EF7C2EFC5F10FC01FFFF27FDEF9C2300C9DE0742F7FE2113A108CBDE0860CF11A10F9DD8480FFBFDD9B6017C21FF406F6C7F0F04007BFFF7C5FF84212879E000C40103FD9844E839D183A0F87E110862E04DF1FBE21FB80D93C21085D183E20F7E00FFFCF8C1C17401F007FEEC04DFBA90F3A02FFE23080517C4236C3DFF03EF0BC41F83EC87E4FFF260F805FFFA0FF40417FC0087810FFDC07FC1F84981805F2047FFFB81E77FE00BDEEF47D06FBF27822F803F1883B107E0F884108B9EF7881F005E30C41E807B007FFFEC41F83801E83E10BC327F2128862F87A208801003E207863D0FE03FC20E701F0040107C1E1FF8107C3FF001C0081CF8C7EF8101F837CD97E300423083A11F443FF85E28BFF07B9FF981F27C65EF7C1107820879FEFC430F41FF93FD1843FFFBC10248000FFEF8C9E27002103BEFFC7F2106010406007FE384A12905F0741EFF002F83BF0EC3F20401F0FC200C1E087E020BE60183BE7FC5E085F2FBFA0FF9D18425093A11F07E017C7F80020009F17BDFE87A12FAE01839BFF05F07401FFBE508802277C0E8003F7801F0025F87E0EE405E843FF847D07BC400061083611FFDF00F9BE8C25168A118B651001C37C000885C308022001D190C2F045DEFC81F9021094A7E8BE4F8BE01F3DF07BE0E005BE044310084F03820FFC2F80BEF845FD8BC1F6FDF1F91D273E0070020105D07BDCF846008FC507802097FD00BDBD909F18041106E33F3FF0087EF07630885F1103FE0843E87FC30783F043C1781FF0FE0007C00837FFF7BE2785E1745FF8FC020438D885E004231003EE0402E0C60F94A2F887F0FBBEE905F1001F10C3A078BE28CA1E189927FC0D0883E7828F7FE3FF7BF413A20F03EE844218F83003801745FD8F7DE1041080613FFFC08BC10F7E01702017F8910F62D04222F81F26BFA003BBFFC1D1007E16FE1E03C00F83FD0BA4F7BBDF701DF0006EFFE41847EE87A00EFA3E03C4E889FEFFFEF03E8E7FDE00C5F108230FC60EF82007C5E077FEDF462F04230079FF0381F141FC8781F0C232007B203603F843F77BED8BC1F003CF77BA0002117C22F0C1BF8024103E100B2417C40003F8200802077FEFC2318FA3DF420FEBE319081FF48101001C83DD1F4C0F93BF20FE11001DEF4BFF901CFFFC0C943C0081BF843E0047FF88402F87CE7843E743D0F444E8C2217862F8FE037FDE10BA2F8401173E618722103BD08C5E0F762008BEFEC8208422E8422F07A230060F075F10826F8C43100A1FF423E007C1EFBE17C8601405F80A20943800BE1FFC9CF83FC30C210005E2E1A1B0E24DD00F0FD060DFDD811D8F62AECE62719FAF6EA040A0400FD13FAD1BFFC0128DA321FF4E8EE020C01E11C01FF1CEFF8F126E1EE1C1EEFF61CF50B0EEC0BD5011BE22216F32D09EFF40320F2FAE801B7C103FC0CF6F9E1F0FCECE7EF0900F8EC18EBF90DF9092C0CF9103914FDF631DBFE101FEE0624010904EBFE030F140609FAE205101CEFF505DB190C3ADAFEC91B1DE2F333E1F33AEA0C10F907030FE1E71C07F81108E40B01F8CF1900061115F8EB00ED29E8E710F1E8D80CEE0D08ED002605E0281518F613D702E7EE0112F414DEED502CF1D4F5EE0FF8EAF0FE022E350918F6171BE71123FD0BD71703C60917471CC62EEC1316FCE321D1FE1901242BFDFB0A1728FCF31D081601EED7020E010D07FBFB00E8F4F3F9F6FCD7FBF0D7EF3CECFCFBE81B2EE4290AF105F1220EF3E7E6C9E9C709D3D125E41DD8F110E428EBF1ECDA3A1DEF24E9020BD92FD9FC0402FFD50622EA163816FCD9EB00243212142601DBEFFDD12C2C04151B0DFBFC0F40FADDF0F6DF101BD3231BFDDC13E312D7050DF1F80C0AF2F933E220024113F90CDB13041ACF100006CE133DFAFEEFF910EAC2F5ED1DFEE0E100E2F4F0200CD9CB18E822FE17FFF509D712E9FEBB070C150C06111516112120131ECDFA15E20926EB0DEAFC0602D8021232C5E11F00E401F8313BC9F3DAFD0505FF0007EEEEE5EA170D200BF5FEFDFD2212DCFCDCB2100DE702121BE52110EB3B0AEE0EDD2412D1FF1220060CCADEE3F810F0C2E7F4020AF7D713FDF5FF03FC10110833FCF7F310E6EB12FE290BF7A8E1FA1CFCED0DFED8D6111FECE70C0F09E4001D031A29160FF904FB290DF83B36EEF73EF20DF80BEAF3D809100CDAFBFE2E31FFCB040D2EF3D93304F1E7071801E92403F009F930FBF3F7E6210021FFD52306EEF6E4FAF0FF33F4E512DFF4EF150DFF0FFBE03B05CA1AFC181CFAF71909D8DCEC0CEED5FE0909FD110FE7DD171106FADE240504DF2006140A19CCF31613F3FE16DDFBD7060908DE0BB1070AFBE611FEFAF3F804F2240857ED0D25FFC71B0618D51F33DCFAF515161A10F31120072405FD00FEF6F2D420DA04E60B0736EBC100E2FE09E1D50CD8D00917020FE5C61B23F4F4E5FF13E0251EE0DC0A0616E710161102ED3CE7F4F70C2B10F4030E132EF9210219E9F006DF0AF8DD1310FDF9FC0DEFEF17FCF1DEF512E90BBF11FD0CFA1CFB11EF0C2A15EF131D23E112EF0AEAE32ADB214A1206F010E40D0DF6F40EFB0CF8EA1A0D05FE1EFDE20814074EFBD51700ECFDF3CEEEF20B2520DE06110903FE02FD10E3F9230A1114E226D7E4E81336FFC3E4300FCEDF1A29F011FEF5F8C8E91E02EDE5D3B508DE24291901211EFBF913F0EFF7D43515F1FE44F12D05E3E809E4F20027FCE8F01D0301FEF10F00081915FB2817290DD1D605E7081BF3160CD204"  # Replace with your actual private key hex string
logn = 10  # Example logn value
public_key = generate_public_key(private_key_str, logn)
print("Public Key:", public_key)
