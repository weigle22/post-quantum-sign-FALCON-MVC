import ctypes
import os

# Get the full path of the current directory
current_directory = os.path.dirname(os.path.abspath(__file__))

# Load the DLL
dll_path = os.path.join(current_directory, "falcon_full_64.dll")
your_dll = ctypes.CDLL(dll_path)

# Define the argument and return types for the verifySignature function
your_dll.verifySignature.argtypes = [ctypes.c_char_p, ctypes.c_char_p, ctypes.c_char_p, ctypes.c_uint]
your_dll.verifySignature.restype = ctypes.c_char_p

def verify_signature(message, signature_str, public_key_str, logn):
    # Call the DLL function
    verification_result_str = your_dll.verifySignature(message.encode(), signature_str.encode(), public_key_str.encode(), logn)
    if verification_result_str is None:
        print("Error: Verification failed.")
        return None

    return verification_result_str.decode()

# Example usage
message = "Hello World"  # Replace with your actual message to verify
signature_str = "3A953DDF0743649AA402DE41DDB00D2FFFCFD796630A473812B1E1E1D613496B88488E776962C775862872D2A4868D72460985A3BCA1DAF2A41926721D6BBC7DD0B06A27CE1374F9942A0E152BC2489085E524AB63E208D6AB49267C8C22212245A2AB1B268128CE420E53AC59D4495F6276FE1736AC4F8E4FDA030E833478662D2995F8CE3DE689654BA72EF6A1924F1D3E7228F4FEE52ECA6A5B197471C5405A9EC9EE6B6B51629D488C09AE651447F43869A6D39B3BC6C1B67699BD1DBE97AC28CC48DE5B680DCCF55E848CC9223EBA9D928F6E5FD62982C9706603646BFE4A159676F31B8B0D9A23BA5AE7D24427316863484A1F8E30E86C5C94479D1330D927DFE98B1DB06F8E420A54788B9D6E207760E8D78259CEECC63FC6EE51162F23138023DD5AFB6580329D28230F4799377A6C516F4EA5F39DD7C18A7498D4CCECFFBB0E4F4AAE705CE8EBDEC08874E232D7E30A2BF3978442BE520C26EDC182B3122A1A74A79278B78395BE6A620EAA9AF79C1C0230FB9E6B3B97B9E0C921DA5E726B42402CFC0A4C9E6972D3B5E89991D5B11C155D6DF51A0B349A972A85F0E1A6DA5FB557DE2CABBE4F5956ADE942785824AF0853F5C99E63B7348C38DC9721DBA7DC67DA46131E4CD37E5295618A23063A391F8FD9623DE5BF1872775F3EA3EDC7AAD9B11C552AEB0DE69B2B3396BC547ECB2D51432C96E994C8B158E5B14BFE5AA33818F8D3B41B5709844EF63F36359B417B29EC330CC8CE30029CBA5F390DE097BFD08A04EDE0F5B3B29B567B66C37A8CEC4D13798723743B5662EF19A64A4C7389248D63596AAE41E36E4F2C593B56478DC5802E06C686238A8A6F397634B98709AC4C482452E1B7548DF65247B0A66DD32516055CA17B24C2D2A0D7B8AAB347C9D0D9501F2A8D1AC9BFA5D22C5B5EC2D35994B14ADF8BBAA12EE9F535D55D503AC7E8B5ECF48C9230F1AA913AFE40F713DDD6A3248272689E3612013D94A923992C4FB1481B51FA986F743A2A42129AA0D87C490012C891D043CE1C58D72709CBEB8961105C8EDB2121F7371E5C3409BE471E83B0FF90E4EEFAE1C8963BF5E622CEC738D585DE79034CA1EF1244B0DD67099E59D8B7EC97CE5FCF74C26A6213FB3669E44E15B9D4A7ED2CAF334EAE3E675B4DB07C88B0D025356D4B2B44644A8AF6D8BD5B149A598C86A779060B71519AE222473B1785663FA9CCF99BE16846E9418D219C4F1C75E3DDB95B4691778D474D4705AC490D8B10825BF0C2845C1AE7196D3052510C3296EB1FADBDD53BAEF5FF31F0809CAD234ED6BEDAACA1AD4D765F0BDED64D3EC5D5F89CBA83F1BA43156C3BB7B6EE45F25004B59242171A6ECD873FD9910E204DAD63C1362178047FB1FAE0C7626A8EBFD66913AF2FBE5BC37350B95CFF7AD67BA04B5302ECA268DC9141B45FAAD46ABC1DAB4D757C591A9985399E8C36229DEFA292F857F261518AF75EF2A3C6B01287732358D121C544DCFBCEC318F46929954C6F5314A5A8FAFE9CE629C091327AAC962F8ABA59EA2EAFE18DC3E093D4DB0863EF8ABEF693DDFBDC120F7E0B2DBEFEA45B2F56D53769B1BBFE1EF5D7D8D6D9C79936DEB4A995624E7DA3984FE655157898E9167AB2D7963774C585570B147458DD4FB2871AE017CD17D3CCF36BB4388629602D7239D45F8927ADE2DCC8062FB2AD2B6A43C6A0385E15953B5B3323A131E664B9B83FCE1DC015D5BF7B8C9956366FBB41C89A33A8304C8A83974FCC4B89A3911DB39F4DB1D929E878CF64CA9D79365B5D797EB2BE2AF0"  # Replace with the signature to verify
public_key_str = "0A6B459E599DA5152E86C606806E1B25586D37910DC6283238F258A509679596EACF4A1AA7F07D724DDCD33FF1C593F68BA4A2D8F855444D74A205112814AE4014F1B8C78390AA9245AB748741E5B99196A1E406827336D02672CE452CAAEC31904A80047CA2E9B0860BADD6E7A85452805E50BCB3ADDA349AA6A9343815620032BD06861C067408B227F3AC2F48081BA7800F3F1CE2053056548347F203211C49AF390DC11487020A83590C90D9047F25C90C70C01E254BD9CAE52C84CC7EB40E362D65070552CC859B9A5B568976E0DDDC391BCD751260277E82B5F1A441184B1040F9B11DA9593B6AFD34D887338BFDC02343D7B8948EA459C354997E5D158B0D4892856E8604DFD389043253B113CC1D29D433E41B138B4F2AA8360F6BF98DADD208C64B6927A1D67493DEA60330D7B1CCCF56356C89B6E0CE6F36AA606B081B376498824413CA3A7A121F47984BAA09FC62A6535884B1C2F864FA0AEC5C897006D506F92090EA8377524150E831306F4AA23EECEED0CC2447030CD526B5629763F0EB44DED9139B2E040839879B606DB670AA041D7D38FBA53A5D2D4CC82741C2D88B995EE0A3C0540A70D2AE2927CE93455A8690011C8D8A50544B42C59B2A22FD1BE08A457E201ACA65991919D26FD9F86C530FBAC9A6031BDD9E4CFE48F66E926F193F67CC9BE231C2307BDBEA2A002437B2E8CFC7BF9E2BD0CB00CDA9924F73665B330CF4C8997543423948E8BA54617C5E8E379253171E2BE6075B151D815A61FFB1C0C32267A806EAD049B46B18DC807F5AEFAE0EF2A32B82DDBFEE3023FE232744D6BE92C32B23684E2DD508EA42A865DC73CD52EB8ECCF0A12021B250E4A8677BD054A3359655B7AF60215AFCB3B39FE3A7517EE5430D909FDE287622D858685D8B17E2EE733A0AFC926ECE001F2EA739564C511B55269209DD76A64C4B553AE92D84F2D9B85FAA825B5627BA9A17771122705A0816940951F9B09B977A6D31B3C17BACE75489C49870D8D8849C83542B947965E48BA50E2EE79AB0C4B3224E15215D955879CEF10428F3E3C51F0B9EC4E692262F4168EC83A3B59190BC84CA97ADE314A75DEEC97BDC9693C2DC3913904129C1670AD769B60D4C0C6AC20B7010527EF9A2ACB0AF4C8836724289BA299967CA81B49061B8519951F76575D77BD048AD4DA5AEF3E40D5BBB8C1B831B2B804DECB48253CFACB415E161C10F7DA62AB9B9572E1B86329ED57B919C260277D821D6FF6B406DC53584A061E25073DD23EA65EE6A881519CC24FE82D99B6DA1994C3153FD5F9304116B00CD19278BD0A6B1D2DCF08D31610B40E78243E8136B3E69689A9002657F99BA82229BF04E48FB68DCA956908729A3EEA0B20EA1920FE2861AF3CA8383515046DA05BA1F698301D367CCA10CF4FA98171414109A27CF852E77ADC8C72752632AE854D016A71496D920F721263308F8BF3342D8C16FC15AC8F2CDC6A50CAF150757CF72BD4C8355A16F6F0532B136C71388E1B7FAEAC3C3A170EBA7AC80E02F845E11399A7168FA05B13C02AE5139469B8F0595629AE1D2C015AF51889A97D4E1579A6594CB1E154DBB88DEDB74EB338B719FB670D397AFF46472C35D9B76E21B636801247C7D71D059497A10087BAAC4566D87682B363008435ACC1F17E1016015B130C0084B3C3CD64604DD959D6C0CB8E76C4C29607E81BB4222A160DA1270ED65D4B9A921A9CE41651219885AD29B740880C3C1E2A8A3BFC46D45465FC88B554726D94CAFBB61B9AB9F9A93437C988B26C7276FF18AF054205773D23F3732629D997C22A46DE6F45158D9235C477B15E5851534D36736812EC5E007A7813C378ACA8538A815D581C152CF5BE2E1F2EA637107E042639E54F1486DFF801E12FF9AD01AA6EFCBDB7100E914452186597AADDB76D2E23FF845A2D74E8462222ADAEA287D6D02CE38E74AA1719DA7B154514CB139D27B6DEA1A806066AA40A4B090EC88309952733E15C0065D503286D6E7291B876340EABB30C38CB691D16AA777D5E5678C7D02A6C6134B522447D45D4146E472A54B1F7E29BAE0AB029634776DA5099785394A6A055242078609FA9BE0C827CD010D02A9646BB505D2EBE578EBEE8E95C5B18EAE635B10A9B2C561E491364F929A59177B1E820781A6293618EBD6D727BF9A79BDFBE489ACAFAE97C7F0AAF2BE4C221B64E35BBA048F19ED102391C0C8382087451CACC817CA94D59ED2C87BB06CA600C6AB7871E1B0A03EEEE0868BB416A950341B849696DCF3654DC71D7B846D21F4EFD36D4269799443AA934EC29BEC93229A095C116CE3003E3D17A569D2D70FD826C29C16AF925CCCA811A6C97E1A05C5BB13D35156DBF9E69612A75873A1FB24B50700A1AAA640F687FA3D1486D0CE60661841DF8388216642CB664E96623A6B65E4523B5CC995E956E7CF3AA94C215513067ECA8E58992EDD66B973192F900D8A7D7D6AFE94433AC1B72A7E507A3F990904AC56762D76505413914981908494D39390553012E7B9A592"  # Replace with the public key to verify with
logn = 10  # Example logn value
verification_result = verify_signature(message, signature_str, public_key_str, logn)
print("Verification Result:", verification_result)
